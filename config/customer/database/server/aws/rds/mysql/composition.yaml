apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    cloud: aws
  name: xmysqlsrvs.demo.upbound.io
spec:
  compositeTypeRef:
    apiVersion: demo.upbound.io/v1alpha1
    kind: XMySQLSrv
  patchSets:
  - name: standardTags
    patches:
    - fromFieldPath: spec.clientId
      toFieldPath: spec.forProvider.tags.Client
    - fromFieldPath: spec.owner
      toFieldPath: spec.forProvider.tags.Owner
    - fromFieldPath: spec.env
      toFieldPath: spec.forProvider.tags.Environment
  - name: network-id
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.labels[networks.aws.platformref.crossplane.io/network-id]
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      spec:
        forProvider:
          description: Security group for RDS
    name: rdsSecurityGroup
    patches:
    - fromFieldPath: spec.vpcId
      toFieldPath: spec.forProvider.vpcId
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: standardTags
      type: PatchSet
    - patchSetName: network-id
      type: PatchSet
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-rds-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.name
      transforms:
      - string:
          fmt: '%s-rds-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.labels[securitygroup]
      transforms:
      - string:
          fmt: '%s-rds-sg'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupRule
      spec:
        forProvider:
          cidrBlocks:
          - 0.0.0.0/0
          description: Allow ingress for rds
          fromPort: 3306
          protocol: tcp
          securityGroupIdSelector:
            matchControllerRef: true
          toPort: 3306
          type: ingress
    name: rdsSecurityGroupRuleIngress
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdSelector.matchLabels[securitygroup]
      transforms:
      - string:
          fmt: '%s-rds-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sg-rule-rds-ingress'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupRule
      spec:
        forProvider:
          cidrBlocks:
          - 0.0.0.0/0
          description: Egress
          fromPort: 0
          protocol: "-1"
          securityGroupIdSelector:
            matchControllerRef: true
          toPort: 0
          type: egress
    name: rdsSecurityGroupRuleEgress
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdSelector.matchLabels[securitygroup]
      transforms:
      - string:
          fmt: '%s-rds-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sg-rule-rds-egress'
        type: string
  - base:
      apiVersion: rds.aws.upbound.io/v1beta1
      kind: ParameterGroup
      metadata:
        name: example-parametergroup
      spec:
        forProvider:
          family: mysql5.7
          parameter:
          - applyMethod: pending-reboot
            name: lower_case_table_names
            value: "1"
          - applyMethod: pending-reboot
            name: innodb_lock_wait_timeout
            value: "5000"
          - applyMethod: pending-reboot
            name: back_log
            value: "80"
          - applyMethod: pending-reboot
            name: flush_time
            value: "0"
          - applyMethod: pending-reboot
            name: general_log
            value: "1"
          - applyMethod: pending-reboot
            name: innodb_flush_log_at_trx_commit
            value: "1"
          - applyMethod: pending-reboot
            name: innodb_thread_concurrency
            value: "33"
          - applyMethod: pending-reboot
            name: innodb_autoextend_increment
            value: "64"
          - applyMethod: pending-reboot
            name: innodb_buffer_pool_instances
            value: "8"
          - applyMethod: pending-reboot
            name: innodb_concurrency_tickets
            value: "5000"
          - applyMethod: pending-reboot
            name: innodb_old_blocks_time
            value: "1000"
          - applyMethod: pending-reboot
            name: innodb_open_files
            value: "300"
          - applyMethod: pending-reboot
            name: innodb_stats_on_metadata
            value: "0"
          - applyMethod: pending-reboot
            name: innodb_file_per_table
            value: "1"
          - applyMethod: pending-reboot
            name: join_buffer_size
            value: "562144"
          - applyMethod: pending-reboot
            name: key_buffer_size
            value: "8388608"
          - applyMethod: pending-reboot
            name: long_query_time
            value: "180"
          - applyMethod: pending-reboot
            name: max_connections
            value: "5000"
          - applyMethod: pending-reboot
            name: max_connect_errors
            value: "100"
          - applyMethod: pending-reboot
            name: connect_timeout
            value: "5000"
          - applyMethod: pending-reboot
            name: query_cache_size
            value: "16777216"
          - applyMethod: pending-reboot
            name: query_cache_type
            value: "1"
          - applyMethod: pending-reboot
            name: read_buffer_size
            value: "65536"
          - applyMethod: pending-reboot
            name: read_rnd_buffer_size
            value: "262144"
          - applyMethod: pending-reboot
            name: innodb_sort_buffer_size
            value: "262144"
          - applyMethod: pending-reboot
            name: sync_master_info
            value: "10000"
          - applyMethod: pending-reboot
            name: sync_relay_log
            value: "10000"
          - applyMethod: pending-reboot
            name: sync_relay_log_info
            value: "10000"
          - applyMethod: pending-reboot
            name: slow_query_log
            value: "1"
          - applyMethod: pending-reboot
            name: table_definition_cache
            value: "1400"
          - applyMethod: pending-reboot
            name: innodb_log_buffer_size
            value: "16777216"
          - applyMethod: pending-reboot
            name: innodb_log_file_size
            value: "128000000"
          - applyMethod: pending-reboot
            name: max_allowed_packet
            value: "1073741824"
          - applyMethod: pending-reboot
            name: innodb_print_all_deadlocks
            value: "1"
          - applyMethod: pending-reboot
            name: max_execution_time
            value: "3600000"
    name: parameterGroup
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-db-parameter-group'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.description
      transforms:
      - string:
          fmt: parameter group for %s created by crossplane
        type: string
  - base:
      apiVersion: rds.aws.upbound.io/v1beta1
      kind: SubnetGroup
      spec:
        deletionPolicy: Delete
        forProvider:
          description: An excellent formation of subnetworks.
          subnetIdSelector:
            matchLabels:
              access: public
    name: rdsSubnetGroup
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-db-sn-grp'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platformref.crossplane.io/network-id]
  - base:
      apiVersion: rds.aws.upbound.io/v1beta1
      kind: Instance
      spec:
        deletionPolicy: Delete
        forProvider:
          dbName: upboundaws
          dbSubnetGroupNameSelector:
            matchControllerRef: true
          engine: mysql
          engineVersion: "5.7"
          instanceClass: db.t2.small
          passwordSecretRef:
            key: pass
            name: rds-creds
            namespace: upbound-system
          publiclyAccessible: false
          region: us-west-2
          skipFinalSnapshotBeforeDeletion: true
          username: admin
    connectionDetails:
    - fromConnectionSecretKey: username
    - fromConnectionSecretKey: password
    - fromConnectionSecretKey: endpoint
    - fromConnectionSecretKey: port
    name: rdsInstance
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-db-srv'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - string:
          fmt: '%s-db-srv'
        type: string
    - fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    - fromFieldPath: spec.storageGB
      toFieldPath: spec.forProvider.allocatedStorage
      transforms:
      - math:
          multiply: 1024
        type: math
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcSecurityGroupIdSelector.matchLabels[securitygroup]
      transforms:
      - string:
          fmt: '%s-rds-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.parameterGroupName
      transforms:
      - string:
          fmt: '%s-db-parameter-group'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.dbSubnetGroupName
      transforms:
      - string:
          fmt: '%s-db-sn-grp'
        type: string
