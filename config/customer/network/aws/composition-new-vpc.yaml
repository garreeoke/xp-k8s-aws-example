apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    cloud: aws
    vpcType: new
  name: aws-new-vpc.xnetworks.demo.upbound.io
spec:
  compositeTypeRef:
    apiVersion: demo.upbound.io/v1alpha1
    kind: XNetwork
  patchSets:
  - name: network-id
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.labels[networks.aws.platformref.crossplane.io/network-id]
      type: FromCompositeFieldPath
  - name: standardTags
    patches:
    - fromFieldPath: spec.clientId
      toFieldPath: spec.forProvider.tags.Client
    - fromFieldPath: spec.owner
      toFieldPath: spec.forProvider.tags.Owner
    - fromFieldPath: spec.env
      toFieldPath: spec.forProvider.tags.Environment
  resources:
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPC
      spec:
        forProvider:
          cidrBlock: 192.168.0.0/16
          enableDnsHostnames: true
          enableDnsSupport: true
          tags:
            Name: upbound-vpc
            Owner: Platform Team
    name: vcp
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
    - patchSetName: standardTags
      type: PatchSet
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.labels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.tags.Name
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          access: private
      spec:
        forProvider:
          cidrBlock: 192.168.0.0/18
          tags:
            kubernetes.io/role/internal-elb: "1"
          vpcIdSelector:
            matchControllerRef: true
    name: subnet-private-a
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.availabilityZone
      transforms:
      - string:
          fmt: '%sa'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: metadata.labels[zone]
      transforms:
      - string:
          fmt: '%sa'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          access: private
      spec:
        forProvider:
          cidrBlock: 192.168.64.0/18
          tags:
            kubernetes.io/role/elb: "1"
          vpcIdSelector:
            matchControllerRef: true
    name: subnet-private-b
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.availabilityZone
      transforms:
      - string:
          fmt: '%sb'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: metadata.labels[zone]
      transforms:
      - string:
          fmt: '%sb'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
    name: routeTable
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-rttbl'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.tags.name
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: RouteTableAssociationA
    patches:
    - patchSetName: network-id
      type: PatchSet
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.routeTableIdRef.name
      transforms:
      - string:
          fmt: '%s-rttbl'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[zone]
      transforms:
      - string:
          fmt: '%sa'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.tags.name
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-rta-a'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: RouteTableAssociationB
    patches:
    - patchSetName: network-id
      type: PatchSet
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.routeTableIdRef.name
      transforms:
      - string:
          fmt: '%s-rttbl'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[zone]
      transforms:
      - string:
          fmt: '%sb'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.tags.name
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-rta-b'
        type: string
  - base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Addon
      spec:
        forProvider:
          addonName: vpc-cni
    name: cniAddon
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.clusterNameRef.name
      transforms:
      - string:
          fmt: '%s-ekscluster'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-cni-addon'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpoint
      spec:
        forProvider:
          privateDnsEnabled: true
          serviceName: com.amazonaws.us-west-2.ec2
          vpcEndpointType: Interface
    name: ec2Endpoint
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ec2-endpoint'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSubnetAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: ec2Endpoint-sna
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platformref.crossplane.io/network-id]
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-ec2-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ec2-endpoint-rta'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSecurityGroupAssociation
    name: ec2Endpoint-sga
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-ec2-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdRef.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ec2-endpoint-sgaa'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpoint
      spec:
        forProvider:
          privateDnsEnabled: true
          serviceName: com.amazonaws.us-west-2.ecr.dkr
          vpcEndpointType: Interface
    name: ecrDkrEndpoint
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ecr-dkr-endpoint'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSubnetAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: ecrDkrEndpoint-rta
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platformref.crossplane.io/network-id]
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-ecr-dkr-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ecr-dkr-endpoint-sna'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSecurityGroupAssociation
    name: ecrDkrEndpoint-sga
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-ecr-dkr-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdRef.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ecr-dkr-endpoint-sga'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpoint
      spec:
        forProvider:
          privateDnsEnabled: true
          serviceName: com.amazonaws.us-west-2.ecr.api
          vpcEndpointType: Interface
    name: ecrApiEndpoint
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ecr-api-endpoint'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSubnetAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: ecrApiEndpoint-sna
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platformref.crossplane.io/network-id]
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-ecr-api-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ecr-api-endpoint-sna'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSecurityGroupAssociation
    name: ecrApiEndpoint-sga
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-ecr-api-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdRef.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-ecr-api-endpoint-sga'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpoint
      spec:
        forProvider:
          privateDnsEnabled: true
          serviceName: com.amazonaws.us-west-2.sts
          vpcEndpointType: Interface
    name: stsEndpoint
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sts-endpoint'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSubnetAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: stsEndpoint-sna
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platformref.crossplane.io/network-id]
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-sts-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sts-endpoint-sna'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSecurityGroupAssociation
    name: stsEndpoint-sga
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-sts-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdRef.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sts-endpoint-sga'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpoint
      spec:
        forProvider:
          privateDnsEnabled: true
          serviceName: com.amazonaws.us-west-2.logs
          vpcEndpointType: Interface
    name: logsEndpoint
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-logs-endpoint'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSubnetAssociation
      spec:
        forProvider:
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              access: private
    name: logsEndpoint-sna
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platformref.crossplane.io/network-id]
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-logs-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-logs-endpoint-sna'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointSecurityGroupAssociation
    name: logsEndpoint-sga
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-logs-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdRef.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-logs-endpoint-sga'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpoint
      spec:
        forProvider:
          serviceName: com.amazonaws.us-west-2.s3
          vpcEndpointType: Gateway
    name: s3Endpoint
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-s3-endpoint'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPCEndpointRouteTableAssociation
    name: s3Endpoint-rta
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.routeTableIdRef.name
      transforms:
      - string:
          fmt: '%s-rttbl'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcEndpointIdRef.name
      transforms:
      - string:
          fmt: '%s-s3-endpoint'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-s3-endpoint-rta'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: network-id
      type: PatchSet
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      spec:
        forProvider:
          description: Security group for endpoints
    name: endpointSecurityGroup
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: standardTags
      type: PatchSet
    - patchSetName: network-id
      type: PatchSet
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.name
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.labels[securitygroup]
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupRule
      spec:
        forProvider:
          cidrBlocks:
          - 192.168.0.0/16
          description: Allow inbound
          fromPort: 443
          protocol: tcp
          securityGroupIdSelector:
            matchControllerRef: true
          toPort: 443
          type: ingress
    name: endpointSecurityGroupRuleIngress
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdSelector.matchLabels[securitygroup]
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sg-rule-endpoint-ingress'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupRule
      spec:
        forProvider:
          cidrBlocks:
          - 0.0.0.0/0
          description: Allow egress
          fromPort: 0
          protocol: all
          securityGroupIdSelector:
            matchControllerRef: true
          toPort: 0
          type: egress
    name: endpointSecurityGroupRuleEgress
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdSelector.matchLabels[securitygroup]
      transforms:
      - string:
          fmt: '%s-endpoint-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sg-rule-endpoint-egress'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      spec:
        forProvider:
          description: Cluster security group
    name: clusterSecurityGroup
    patches:
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[vpc]
      transforms:
      - string:
          fmt: '%s-vpc'
        type: string
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - patchSetName: standardTags
      type: PatchSet
    - patchSetName: network-id
      type: PatchSet
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-eskcluster-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.name
      transforms:
      - string:
          fmt: '%s-eskcluster-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.labels[securitygroup]
      transforms:
      - string:
          fmt: '%s-eskcluster-sg'
        type: string
  - base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupRule
      spec:
        forProvider:
          cidrBlocks:
          - 0.0.0.0/0
          description: Egress
          fromPort: 0
          protocol: "-1"
          securityGroupIdSelector:
            matchControllerRef: true
          toPort: 0
          type: egress
    name: clusterSecurityGroupRuleEgress
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.securityGroupIdSelector.matchLabels[securitygroup]
      transforms:
      - string:
          fmt: '%s-eskcluster-sg'
        type: string
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-sg-rule-cluster-egress'
        type: string
